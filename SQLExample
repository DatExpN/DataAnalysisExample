# Пример SQL запросов. 
# Дано три таблицы: 
# shops - shopnumber (код магазина), city (город), address (адрес)
# goods - id_good (код товара), category (категория товара), good_name (название товара), price (цена)
# sales - date (дата), shopnumber (код магазина), id_good (код товара), qty (кол-во проданных товаров в штуках)

# Вывести таблицу, которая будет содержать информацию о магазине, городе, адресе, сумме товаров в штуках 
и сумме товаров в рублях.
# Вывести нужно только записи по дате 01.01.2023
select shopnumber, city, address, sum_count, sum_price
from
(select t2.shopnumber, t2.city, t2.address,  sum(t1.qty)over(partition by t2.shopnumber) 
as sum_count, t1.date, sum(t1.qty*t3.price)over(partition by t2.shopnumber) as sum_price
from sales as t1 left join shops as t2 on t1.shopnumber = t2.shopnumber
left join goods as t3 on t1.id_good = t3.id_good
where t1.date = '2023-01-01') as t4
group by shopnumber, city, address, sum_count, sum_price
order by shopnumber

# Вывести таблицу, которая будет содержать информацию о дате, городе и доле суммарных продаж в эту дату.
# Вывести нужно только товары из категории "фильмы"
select date, city, round(cast(s_date as decimal(10,2))/cast(s_all as decimal(10,2)),2) as share
from
(select t2.city, t1.date, sum(t1.qty*t3.price)over() as s_all,  sum(t1.qty*t3.price)over(partition by t1.date) as s_date
from sales as t1 left join shops as t2 on t1.shopnumber = t2.shopnumber
left join goods as t3 on t1.id_good = t3.id_good
where t3.category = 'фильмы') as t4
group by date, city, share
order by date

# Вывести таблицу, которая будет содержать информацию о дате, магазине и товаре.
# Вывести информацию о топ-5 товаров по продажам в каждом магазине в каждую дату
create table date_shop_c as
(select shopnumber, date, id_good, sum(qty) as sum_qty
from sales
group by shopnumber, date, id_good)

select date, shopnumber, id_good
from
(select *, row_number()over(partition by id_good order by sum_qty desc) as num_rank
from date_shop_c) as t2
where num_rank <= 5
group by date, shopnumber, id_good

# Вывести таблицу, которая будет содержать информацию о дате, магазине, категории товара и сумме в рублях за предыдущую дату.
# Вывести информацию только о магазинах в Москве
create table task_5 as
(select t1.date, t1.shopnumber, t2.category, sum(t1.qty*t2.price)over(partition by t1.date) as general_sum 
from sales as t1 left join goods as t2 on t1.id_good = t2.id_good
left join shops as t3 on t1.shopnumber = t3.shopnumber
where t3.city = 'Москва')

select date + interval '1' day as date2, shopnumber, category, general_sum
from task_5
group by date2, shopnumber, category, general_sum

# Необходимо написать запрос, который по таблице с интервалами объединит эти 
# интервалы в случае если они пересекаются или граничат.
# Пример таблицы
start_date, end_date
2020-01-01,2020-01-15
2020-01-02,2020-01-02
2019-12-31,2020-01-02
2019-12-31,2020-01-01
2020-01-13,2020-01-30
2020-02-01,2020-02-05
2020-02-15,2020-02-27
2020-02-16,2020-02-19
2020-02-03,2020-02-16
2020-03-01,2020-05-04
2020-06-12,2020-06-22
2020-04-17,2020-06-19

with united_table as (
select t1.start_date, t1.end_date, t2.start_date as new_date_start, t2.end_date as new_date_end
from table5 t1 left join table5 t2 on (t2.start_date <= t1.end_date and t2.start_date >= t1.start_date) 
or (t2.end_date >= t1.start_date and 
t2.end_date <= t1.end_date)),
crt as (
select *, min(new_date_start)over(partition by start_date) as min_v, max(new_date_end)over(partition by end_date) as max_v
from united_table),
crt2 as (
select *, case when start_date < new_date_end and end_date > new_date_start and start_date > new_date_start 
and start_date <> new_date_start AND end_date <> new_date_end then 1 end as filt
from crt),
crt3 as (
select min_v, max_v
from crt2
where filt = 1),
lag_range as (
select min_v, max_v, lag(max_v) over (order by min_v) as prev_max_v
from crt3)
select min_v, max_v
from lag_range
where prev_max_v is null or min_v > prev_max_v
